model Song {
    id             String  @id @default(uuid())
    name           String
    audioFilePath  String  @map("audio_file_path")
    coverImagePath String  @map("cover_image_path")
    lyric          String?
    userId         String  @map("user_id")
    albumId        String? @map("album_id")
    albumOrder     Int?    @map("album_order")

    user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    album Album? @relation(fields: [albumId], references: [id])

    @@unique([albumId, albumOrder])
    @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
    @@map("songs")
}

model Album {
    id             String  @id @default(uuid())
    name           String
    coverImagePath String  @map("cover_image_path")
    isPublic       Boolean @default(false) @map("is_public")
    userId         String  @map("user_id")

    user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    songs Song[]

    @@map("albums")
}
